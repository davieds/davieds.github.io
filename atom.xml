<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cnFyns</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://cnFyns.com/"/>
  <updated>2016-09-25T03:44:54.000Z</updated>
  <id>http://cnFyns.com/</id>
  
  <author>
    <name>YW</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>page</title>
    <link href="http://cnFyns.com/2016/09/25/%E9%80%9D%E5%B9%B4/"/>
    <id>http://cnFyns.com/2016/09/25/逝年/</id>
    <published>2016-09-25T03:42:00.000Z</published>
    <updated>2016-09-25T03:44:54.000Z</updated>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=32957955&auto=1&height=66"></iframe>


<h1 id="逝年"><a href="#逝年" class="headerlink" title="逝年"></a>逝年</h1><p>风里飘雪的花<br>在记忆之中发芽<br>那些红色绿色<br>我们的青春年华<br>志向无限远大<br>转眼已各奔天涯<br>独自走在街上<br>只看见曾经的晚霞<br>时间似流水<br>催促我们长大<br>年轻的心有了白发<br>当初的人呐<br>你们如今在哪<br>是否也在寻找梦的家<br>风里飘雪的花<br>在记忆之中发芽<br>那些红色绿色<br>我们的青春年华<br>志向无限远大<br>转眼已各奔天涯<br>独自走在街上<br>只看见曾经的晚霞<br>时间似流水<br>催促我们长大<br>年轻的心有了白发<br>当初的人呐<br>你们如今在哪<br>是否也在寻找梦的家<br>时间似流水<br>催促我们长大<br>年轻的心有了白发<br>当初的人呐<br>你们如今在哪<br>是否也在寻找梦的家</p>
]]></content>
    
    <summary type="html">
    
      &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;http://music.163.com/outchain/player?type=
    
    </summary>
    
      <category term="音乐" scheme="http://cnFyns.com/categories/%E9%9F%B3%E4%B9%90/"/>
    
    
      <category term="民谣" scheme="http://cnFyns.com/tags/%E6%B0%91%E8%B0%A3/"/>
    
  </entry>
  
  <entry>
    <title>问题收集</title>
    <link href="http://cnFyns.com/2016/08/24/%E9%97%AE%E9%A2%98%E6%94%B6%E9%9B%86/"/>
    <id>http://cnFyns.com/2016/08/24/问题收集/</id>
    <published>2016-08-24T02:45:30.000Z</published>
    <updated>2016-09-12T05:48:21.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题收集"><a href="#问题收集" class="headerlink" title="问题收集"></a>问题收集</h1><h5 id="面试问题走一波："><a href="#面试问题走一波：" class="headerlink" title="面试问题走一波："></a>面试问题走一波：</h5><figure class="highlight excel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">微信如何搜索附近人</div><div class="line">模糊搜索和精确搜索</div><div class="line">即时通讯的UI布局，要是你做你会用多少个<span class="built_in">cell</span></div><div class="line">有没有直播经验</div><div class="line">最近的ipv6上架的问题 以及了解ipv6是什么</div><div class="line">消息机制了解么？你用它做过什么！</div><div class="line">iOS如何优化</div><div class="line">instuments用过哪些工具，如何测试核心动画性能</div><div class="line">沙盒机制</div><div class="line">ffmpeg，opengl了解嘛</div><div class="line">如何收集APP异常信息（比如：崩溃、闪退等）</div><div class="line">离屏渲染了解么,了解的话说一下你一般是从哪几方面操作的</div><div class="line">了解<span class="built_in">GCD</span>的信号量机制么！能谈谈你对它的理解么！</div><div class="line">聊下RAC和MVVM，你对它的看法</div><div class="line">block底层实现</div><div class="line">响应链底的理解</div><div class="line">KVC和KVO</div><div class="line">lldb（gdb）常用的调试命令</div><div class="line">热更新</div><div class="line"><span class="built_in">GCD</span>实现原理</div></pre></td></tr></table></figure>
<script>(function(T,h,i,n,k,P,a,g,e){g=function(){P=h.createElement(i);a=h.getElementsByTagName(i)[0];P.src=k;P.charset="utf-8";P.async=1;a.parentNode.insertBefore(P,a)};T["ThinkPageWeatherWidgetObject"]=n;T[n]||(T[n]=function(){(T[n].q=T[n].q||[]).push(arguments)});T[n].l=+new Date();if(T.attachEvent){T.attachEvent("onload",g)}else{T.addEventListener("load",g,false)}}(window,document,"script","tpwidget","//widget.thinkpage.cn/widget/chameleon.js"))</script>
<script>tpwidget("init", {
    "flavor": "bubble",
    "location": "WS10730EM8EV",
    "geolocation": "disabled",
    "position": "top-left",
    "margin": "10px 10px",
    "language": "zh-cht",
    "unit": "c",
    "theme": "chameleon",
    "uid": "U6BFDDA6F4",
    "hash": "63dc1e56531a53e5ec647d546d773c58"
});
tpwidget("show");</script>

]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;问题收集&quot;&gt;&lt;a href=&quot;#问题收集&quot; class=&quot;headerlink&quot; title=&quot;问题收集&quot;&gt;&lt;/a&gt;问题收集&lt;/h1&gt;&lt;h5 id=&quot;面试问题走一波：&quot;&gt;&lt;a href=&quot;#面试问题走一波：&quot; class=&quot;headerlink&quot; title=&quot;面
    
    </summary>
    
    
      <category term="面试" scheme="http://cnFyns.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>做一个 App 前需要考虑的几件事</title>
    <link href="http://cnFyns.com/2016/08/22/%E5%81%9A%E4%B8%80%E4%B8%AA-App-%E5%89%8D%E9%9C%80%E8%A6%81%E8%80%83%E8%99%91%E7%9A%84%E5%87%A0%E4%BB%B6%E4%BA%8B/"/>
    <id>http://cnFyns.com/2016/08/22/做一个-App-前需要考虑的几件事/</id>
    <published>2016-08-22T02:45:26.000Z</published>
    <updated>2016-08-22T02:58:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="做一个-App-前需要考虑的几件事"><a href="#做一个-App-前需要考虑的几件事" class="headerlink" title="做一个 App 前需要考虑的几件事"></a>做一个 App 前需要考虑的几件事</h2><p>随着工具链的完善，语言的升级以及各种优质教程的涌现，做一个 App 的成本也越来越低了。尽管如此，有些事情最好前期就做起来，避免当 App 有了一定规模后，再感慨当初为什么没有多留点心。</p>
<h4 id="完善的日志系统"><a href="#完善的日志系统" class="headerlink" title="完善的日志系统"></a>完善的日志系统</h4><p>以 iOS 为例，有时图方便，就直接用 <code>NSLog</code> 了，甚至线上都一直开着。一方面会影响性能，尤其是输出比较频繁的时候，另一方面也容易泄露敏感信息，所以一般做法是在 Release 模式下禁用 <code>NSLog</code>，比如在 <code>pch</code> 文件中，通过对环境的判断，对 <code>NSLog</code> 做不同的处理。</p>
<p>但这样仍会有问题，比如我们发现线上的 App 在特定场景下会有某种异常的表现，这时就很希望能有日志来提供更多的信息。可以考虑使用像 <a href="https://github.com/CocoaLumberjack/CocoaLumberjack" target="_blank" rel="external">cocoalumberjack</a> 这样功能更完善的第三方日志工具，在线上仍然开着日志，但不消费，这样就不会泄露敏感信息。当我们需要看日志时，可以通过「调试模式」打开它，然后连上 <a href="http://lemonjar.com/iosconsole/" target="_blank" rel="external">iOS Console</a> 来看。</p>
<p>因为 Log 是一个很普遍的行为，所以最好前期就规范起来，后期遍地都是 <code>NSLog</code> 时，再要改动会有点麻烦，当然也可以偷懒点，直接把 <code>NSLog</code> 的宏定义改了。</p>
<h4 id="Commit-Message-规范"><a href="#Commit-Message-规范" class="headerlink" title="Commit Message 规范"></a>Commit Message 规范</h4><p>在前期开发的时候，往往为了快速实现功能，而忽略了 Commit Message 的规范，然后就会出现很随意的 Commit 信息。这样别人在 Review 代码时就会很累，写某个版本的 Release Notes 也会变得艰辛，甚至过一段时间自己都不知道这些 Commit 代表的意思。而如果自己也讲不清这次改动究竟该怎么描述时，往往是这次改动混杂了较多的信息。</p>
<p><a href="https://github.com/erlang/otp/wiki/Writing-good-commit-messages" target="_blank" rel="external">这篇文章</a> 简洁精确地描述了为什么要写好 Commit Message，以及如何写。遵守这些规范后，就很方便产出这样的 Release Notes 了。</p>
<p><img src="http://limboy.me/image/14676794942559.jpg" alt=""></p>
<h4 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h4><p>这个最好在前期就抓起来，如果前期不做约束，每个人的风格往往会有比较大的差异，导致代码看起来会比较累，甚至有些人是从其他语言转过来的，还会保留之前语言的一些书写习惯，就容易有「出戏」的感觉。一致的代码规范不仅看起来舒服，而且让团队更像一个整体。</p>
<p>这个实施起来会有一定难度，尤其是团队中有一些「老人」的时候，他们往往积累了一套自己的编程习惯，而且不容易被说服。</p>
<h4 id="准备一份编程守则"><a href="#准备一份编程守则" class="headerlink" title="准备一份编程守则"></a>准备一份编程守则</h4><p>里面包含了「最佳实践」和「不要踩的坑」，这个可以一定程度上提高开发效率，避免一些低级错误。比如以 iOS 为例，「不要随便使用通知」，因为通知使用起来太方便了，用得多了调试起来就会很累，而且也不好管理；「通知用完之后记得 remove observer」；不要使用<code>containsString</code> (如果还需要支持 iOS 7 的话)。随着时间的累积，这份守则里的内容会越来越多，也是一件挺宝贵的财富。</p>
<h4 id="页面布局规范"><a href="#页面布局规范" class="headerlink" title="页面布局规范"></a>页面布局规范</h4><p>这个在 Android 相对还好，基本都是通过 xml 来进行布局。在 iOS 里玩法就多了，有用 storyboard 的，有用 xib 的，有直接计算坐标和大小的，有用原生 autolayout 的，有用第三方布局类的。总之就是各显神通，尽量用同一种布局规范（但不建议直接计算坐标和大小），看起来也会方便些。</p>
<h4 id="统计埋点"><a href="#统计埋点" class="headerlink" title="统计埋点"></a>统计埋点</h4><p>这是很重要的一块，客户端所有的数据基本就靠它了，所以尽量选择一个灵活、稳定的数据方案，同时最好在他们提供的 SDK 上再封一层，方便做一些额外的事情（比如想同时接入另一家服务作对比）。</p>
<p>统计埋点还有很重要的一点是「验证」，是否有错打、漏打等现象；iOS / Android 是否有用同一个点；有些点还需要额外的参数，这些参数的格式是否正确等。这些工具往往只能自己来做了，这也是比较花时间的一部分。</p>
<h4 id="App-架构"><a href="#App-架构" class="headerlink" title="App 架构"></a>App 架构</h4><p>App 架构会随着业务、人员的增长而演进，所以当发现当前的架构无法满足日常的业务迭代时，就需要考虑对它做调整了。一般来说，大方向上也就是 <code>MVP / MVVM</code>，等人员多起来时，基本就是组件化开发，当然组件化也会有它的问题（比如资源 / 类重用、组件间通信等），这里就不展开了。</p>
<p>在前期选择一个相对轻量级，但比较清晰的架构（尽量不要选择 <code>MVC</code>），大家都遵守这个架构开发，也能一定程度上提高效率。</p>
<h4 id="页面跳转机制"><a href="#页面跳转机制" class="headerlink" title="页面跳转机制"></a>页面跳转机制</h4><p>虽然 Android、iOS 都原生支持 open 特定 scheme 的 url，不过可能的话，还是通过 router 统一处理会比较方便，也更灵活。比如可以知道注册了哪些 URL；可以知道页面的跳转成功率；方便处理一些奇奇怪怪的需求等。</p>
<h4 id="在线配置"><a href="#在线配置" class="headerlink" title="在线配置"></a>在线配置</h4><p>在线配置可以赋予 App 极大的灵活性，比如运营的一些活动、banner 位调整、首页弹窗等；还可以针对特定机型、系统分发特定的内容，结合规则引擎甚至可以给一部分有相同特征的用户发推送；可以做流量切分等。所以一个强大/稳定的配置中心就显得尤为重要，A/B Test 也可以基于配置中心来做。</p>
<p>这里有些注意事项，因为不少配置的值是运营填的，她们对 value 不那么敏感，所以会出现 value 为空，或者不是想要的类型，或者配了张图片，但是体积超大等，有可能造成客户端 crash / OOM 等异常表现，所以客户端要有足够强大的容错能力。</p>
<h4 id="选择合适的-Crash-平台"><a href="#选择合适的-Crash-平台" class="headerlink" title="选择合适的 Crash 平台"></a>选择合适的 Crash 平台</h4><p>Crash 会给用户造成极大的负面体验，所以需要经常关注 Crash 情况，尤其是刚发版的那段时间。这块 <a href="http://fabric.io/" target="_blank" rel="external">fabric</a> 做的比较好，只是由于是国外的服务，会有些许数据上的丢失，不过问题倒也不是很大，也可以考虑国内的一些服务，如 bugly，毕竟腾讯自己也在用。</p>
<h4 id="Code-Review"><a href="#Code-Review" class="headerlink" title="Code Review"></a>Code Review</h4><p>这也是容易忽视的一点，当业务需求压过来时，先把功能实现了再说，而且在初期往往人手也不够，抽不出时间来做 Code Review。如果是这样的话，可以先 Review 一些核心的点，保证重要的代码是经过 Review 的，不太重要的业务代码可以先放放，等人员充足后再覆盖更大的范围。</p>
<p>Code Review 的主要作用是保障代码质量，同时促进双方成长，一个担心点是质量偏低的代码比例如果较大的话，会影响开发者的心情，增加维护成本，日积月累就成了重重的「历史包袱」。</p>
<h4 id="选择合适的开发模式"><a href="#选择合适的开发模式" class="headerlink" title="选择合适的开发模式"></a>选择合适的开发模式</h4><p>如果是使用 git 来做源码管理的话，可以采用 <a href="http://jeffkreeftmeijer.com/2010/why-arent-you-using-git-flow/" target="_blank" rel="external">flow</a> 模式，基本能满足大部分的需求，而且不少 git 工具也内置了 flow 的支持。这样当需要处理 feature / hotfix / 发版等场景时，就会很方便。</p>
<h4 id="持续集成"><a href="#持续集成" class="headerlink" title="持续集成"></a>持续集成</h4><p>持续集成的目的是让产品在快速迭代的过程中还能保证质量，当有错误发生时，可以第一时间被检查出来，方便修复。如果想偷懒的话，可以直接使用成熟的服务，如 <a href="https://travis-ci.org/" target="_blank" rel="external">travis</a>，也可以自己基于 Jenkins 来搭，iOS 的话，配合 fastlane 效果会更好。自己搭的好处是灵活度更大，可以加入一些个性化需求。</p>
<p>如果有打包平台的话，还可以定时出一个包，这样当发现某个功能使用起来有问题，代码上又没什么头绪时，可以对比以前的包来定位。</p>
<h4 id="Bug-管理系统"><a href="#Bug-管理系统" class="headerlink" title="Bug 管理系统"></a>Bug 管理系统</h4><p>这个 Bug 包括测试阶段和线上的 Bug，Bug 管理工具有很多，使用在线服务或自己搭都可以，但要有，不然很有可能忘了还有哪些问题需要修复，哪些已经修复了。</p>
<h4 id="项目管理工具"><a href="#项目管理工具" class="headerlink" title="项目管理工具"></a>项目管理工具</h4><p>在 App 开发初期，人员较少，沟通起来比较方便，所以很多需求当面就说了，一些原型/设计图可能也是直接 AirDrop 过来的，这样效率自然高，但不便管理。比如没有 prd，产品、开发的理解可能不一致，到头来发现做的不是产品想要的，或者一些细节不符合要求；设计图有更新，但没有同步到所有的开发；需求有变更，但当时在专心做某个 feature，可能就忘了，或者没有理解全面等。所以最好还是有一个项目管理工具来统一处理，再结合敏捷开发，项目的质量和进度就容易得到保障。</p>
<h4 id="Checklist"><a href="#Checklist" class="headerlink" title="Checklist"></a>Checklist</h4><p>一个 App 发布上线之后，要保证不出大的问题，就要在发布之前，先检查一下「一定不能出问题」的点是否正常，就像飞机起飞之前一定会走一遍 checklist 一样。比如推送是否正常、log 是否关闭、组件版本是否正确等，随着 App 功能的增加，这个 list 也会越来越长，虽然过一遍 checklist 会花费些时间，但跟收益相比还是值得的。</p>
<hr>
<p>以上这些点是在感受不过不同量级的 App 开发后整理的，肯定还会有疏漏，不过如果真能做到这些，就已经很不错了，至少当有新人进来时，不会背上沉重的「历史包袱」。</p>
<p>文章内容丰富，基本都概括了需要注意的地方，特此转载。<a href="http://limboy.me/tech/2016/07/06/starting-an-app.html" target="_blank" rel="external">原文链接</a>！</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;做一个-App-前需要考虑的几件事&quot;&gt;&lt;a href=&quot;#做一个-App-前需要考虑的几件事&quot; class=&quot;headerlink&quot; title=&quot;做一个 App 前需要考虑的几件事&quot;&gt;&lt;/a&gt;做一个 App 前需要考虑的几件事&lt;/h2&gt;&lt;p&gt;随着工具链的完善，语
    
    </summary>
    
    
      <category term="技术" scheme="http://cnFyns.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>一个项目的小结</title>
    <link href="http://cnFyns.com/2016/08/11/%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E7%9A%84%E5%B0%8F%E7%BB%93/"/>
    <id>http://cnFyns.com/2016/08/11/一个项目的小结/</id>
    <published>2016-08-11T06:18:11.000Z</published>
    <updated>2016-08-17T02:24:49.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="项目小结"><a href="#项目小结" class="headerlink" title="项目小结"></a>项目小结</h1><h4 id="放首宋胖的歌曲舒缓下……没作细致的规划，想到哪写到哪。"><a href="#放首宋胖的歌曲舒缓下……没作细致的规划，想到哪写到哪。" class="headerlink" title="放首宋胖的歌曲舒缓下……没作细致的规划，想到哪写到哪。"></a>放首宋胖的歌曲舒缓下……没作细致的规划，想到哪写到哪。</h4><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="http://music.163.com/outchain/player?type=2&id=27646205&auto=1&height=32"></iframe>

<h2 id="工欲善其事，必先利其器"><a href="#工欲善其事，必先利其器" class="headerlink" title="工欲善其事，必先利其器"></a>工欲善其事，必先利其器</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">工欲善其事,必先利其器是说:工匠想要使他的工作做好，一定要先让工具锋利。</div><div class="line">比喻要做好一件事，准备工作非常重要。</div><div class="line">语出《论语·卫灵公》：子贡问为仁。</div><div class="line">子曰：“工欲善其事，必先利其器。居是邦也，事其大夫之贤者，友其士之仁者。”</div><div class="line">凡事不管干什么，都得找到合适的方法，方才能事半功倍</div></pre></td></tr></table></figure>
<h2 id="事由"><a href="#事由" class="headerlink" title="事由"></a>事由</h2><p>目标：需要2-3周完成一个建议的APP，3个模块使用的是Web模块，1个原生的模块。</p>
<h5 id="辣么，我们来分析下需求："><a href="#辣么，我们来分析下需求：" class="headerlink" title="辣么，我们来分析下需求："></a>辣么，我们来分析下需求：</h5><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="number">1.</span>Web的页面由前端提供</div><div class="line"><span class="number">2.</span>Web页面能和OC响应、操作</div><div class="line"><span class="number">3.</span>Web的访问安全需要加密</div><div class="line"><span class="number">4.</span>能支付（第三方）</div><div class="line"><span class="number">5.</span>有独立的用户管理系统</div><div class="line"><span class="number">6.</span>网络请求加密</div><div class="line"><span class="number">7.</span>页面操作的提示HUD</div><div class="line"><span class="number">8.</span>定位获取位置信息</div><div class="line"><span class="number">9.</span>自定义TABbar</div></pre></td></tr></table></figure>
<h2 id="开工"><a href="#开工" class="headerlink" title="开工"></a>开工</h2><p>目标确定了，那么动起手来就很快了。分为三大模块来设定：Web，用户管理，支付</p>
<p>web：之前有想过手动撸一个jS+oc响应，但是看过了这个<code>WebViewJavascriptBridge</code>之后，就放弃了，有好的轮子要加以引用，才不会浪费资源。</p>
<p>用户管理：登录，注册、这些大部分相似雷同的部分，这里也是取巧了，从其他的工程就挪过来，修修改改继续沿用。</p>
<p>支付：同上</p>
<h2 id="在开发中碰到的坑"><a href="#在开发中碰到的坑" class="headerlink" title="在开发中碰到的坑"></a>在开发中碰到的坑</h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;项目小结&quot;&gt;&lt;a href=&quot;#项目小结&quot; class=&quot;headerlink&quot; title=&quot;项目小结&quot;&gt;&lt;/a&gt;项目小结&lt;/h1&gt;&lt;h4 id=&quot;放首宋胖的歌曲舒缓下……没作细致的规划，想到哪写到哪。&quot;&gt;&lt;a href=&quot;#放首宋胖的歌曲舒缓下……没作细致的规
    
    </summary>
    
    
      <category term="Webview" scheme="http://cnFyns.com/tags/Webview/"/>
    
  </entry>
  
  <entry>
    <title>近日有感</title>
    <link href="http://cnFyns.com/2016/08/11/%E8%BF%91%E6%97%A5%E6%9C%89%E6%84%9F/"/>
    <id>http://cnFyns.com/2016/08/11/近日有感/</id>
    <published>2016-08-11T03:51:29.000Z</published>
    <updated>2016-08-11T03:58:29.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://macid.co/images/1.2/main-bg@2x.jpg" alt=""></p>
<h2 id="MacID-for-Apple-Watch"><a href="#MacID-for-Apple-Watch" class="headerlink" title="MacID for Apple Watch"></a>MacID for Apple Watch</h2><p>MacID was created with Apple Watch in mind, long before it was even available.<br>MacID for Apple Watch is fast, beautiful, and best of all functional. Just like MacID for iOS, MacID for Apple Watch allows you to lock and unlock multiple Macs, control iTunes &amp; Spotify, and even start screensavers – right from your wrist.<br>Add the MacID Glance near the start of your Glances for super quick access and a quick look at how many Macs you have connected.</p>
<p><img src="https://macid.co/images/1.2/top-down-mac@2x.jpg" alt="" title="MACID"></p>
<h2 id="Compatibility"><a href="#Compatibility" class="headerlink" title="Compatibility"></a>Compatibility</h2><h3 id="MacID-requires-a-Mac-with-Bluetooth-LE-built-in-running-OS-X-10-10-or-newer"><a href="#MacID-requires-a-Mac-with-Bluetooth-LE-built-in-running-OS-X-10-10-or-newer" class="headerlink" title="MacID requires a Mac with Bluetooth LE built in running OS X 10.10 or newer,"></a>MacID requires a Mac with Bluetooth LE built in running OS X 10.10 or newer,</h3><p>and an iOS device with Bluetooth LE running iOS 8 or newer.</p>
<p>MacBook 2015+<br>MacBook Air 2011+<br>MacBook Pro 2012+<br>Mac Mini 2011+<br>Mac Pro 2013+<br>iMac 2012+<br>iPhone 4S and newer<br>iPad (4th gen)<br>iPad mini &amp; iPad Air<br>iPod Touch (5th gen) and newer<br>Apple Watch<br>Please check your devices are capable before downloading MacID.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://macid.co/images/1.2/main-bg@2x.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;MacID-for-Apple-Watch&quot;&gt;&lt;a href=&quot;#MacID-for-Apple-Watch&quot; class=&quot;
    
    </summary>
    
    
      <category term="感想" scheme="http://cnFyns.com/tags/%E6%84%9F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>hexo 分享技巧</title>
    <link href="http://cnFyns.com/2016/08/10/hexo-%E5%88%86%E4%BA%AB%E6%8A%80%E5%B7%A7/"/>
    <id>http://cnFyns.com/2016/08/10/hexo-分享技巧/</id>
    <published>2016-08-10T03:28:33.000Z</published>
    <updated>2016-08-10T06:59:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2016-08-10-11-28-59"><a href="#2016-08-10-11-28-59" class="headerlink" title="2016-08-10 11:28:59"></a>2016-08-10 11:28:59</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;2016-08-10-11-28-59&quot;&gt;&lt;a href=&quot;#2016-08-10-11-28-59&quot; class=&quot;headerlink&quot; title=&quot;2016-08-10 11:28:59&quot;&gt;&lt;/a&gt;2016-08-10 11:28:59&lt;/h2&gt;
    
    </summary>
    
    
      <category term="Test" scheme="http://cnFyns.com/tags/Test/"/>
    
  </entry>
  
</feed>
